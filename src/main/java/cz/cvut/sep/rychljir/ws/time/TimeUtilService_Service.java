package cz.cvut.sep.rychljir.ws.time;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-11-23T19:16:09.885+01:00
 * Generated source version: 3.1.8
 * 
 */
@WebServiceClient(name = "TimeUtilService", 
                  wsdlLocation = "http://127.0.0.1:19090/timeUtilsService?WSDL",
                  targetNamespace = "http://profinit.eu/time/util/") 
public class TimeUtilService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://profinit.eu/time/util/", "TimeUtilService");
    public final static QName TimeUtilPort = new QName("http://profinit.eu/time/util/", "timeUtilPort");
    static {
        URL url = null;
        try {
            url = new URL("http://127.0.0.1:19090/timeUtilsService?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(TimeUtilService_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://127.0.0.1:19090/timeUtilsService?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public TimeUtilService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TimeUtilService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TimeUtilService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public TimeUtilService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public TimeUtilService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public TimeUtilService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns TimeUtilService
     */
    @WebEndpoint(name = "timeUtilPort")
    public TimeUtilService getTimeUtilPort() {
        return super.getPort(TimeUtilPort, TimeUtilService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TimeUtilService
     */
    @WebEndpoint(name = "timeUtilPort")
    public TimeUtilService getTimeUtilPort(WebServiceFeature... features) {
        return super.getPort(TimeUtilPort, TimeUtilService.class, features);
    }

}
